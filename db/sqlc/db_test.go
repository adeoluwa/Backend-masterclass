// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package backend_masterclass

import (
	"database/sql"
	"reflect"
	"testing"
)

func TestNew(t *testing.T) {
	type args struct {
		db DBTX
	}
	tests := []struct {
		name string
		args args
		want *Queries
	}{
		// TODO: Add test cases.
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := New(tt.args.db); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("New() = %v, want %v", got, tt.want)
			}
		})
	}
}

func TestQueries_WithTx(t *testing.T) {
	type args struct {
		tx *sql.Tx
	}
	tests := []struct {
		name string
		q    *Queries
		args args
		want *Queries
	}{
		// TODO: Add test cases.
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := tt.q.WithTx(tt.args.tx); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("Queries.WithTx() = %v, want %v", got, tt.want)
			}
		})
	}
}
